{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","wrapper","item","itemAvatar","src","avatar","itemImage","alt","itemDialog","itemName","name","itemPost","message","itemTime","time","messageData","HW1","Affair","priorityClass","priority","span","id","affair","button","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","index","key","_id","onCLickHandler","title","setFilter","setClass","filter","filterButton","active","firstWrapper","buttonWrapper","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyDownTask","inputClass","input","placeholder","value","onBlur","onChange","onKeyDown","GreetingContainer","users","addUserCallback","setName","setError","length","alert","e","valueInput","currentTarget","trim","HW3","setUsers","user","v1","arrName","push","SuperInputText","type","onChangeText","onKeyPress","onEnter","restProps","spanClassName","finalSpanClassName","finalInputClassName","errorInput","superInput","wrapperForInput","SuperButton","red","console","log","finalClassName","default","wrapperButton","SuperCheckbox","onChangeChecked","children","finalCheckBoxClassName","checkbox","label","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","checkboxBig","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c6043760.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstWrapper\":\"Affairs_firstWrapper__3XoAO\",\"wrapper\":\"Affairs_wrapper__2cE9_\",\"button\":\"Affairs_button__3NRqI\",\"filterButton\":\"Affairs_filterButton__3JOLi\",\"active\":\"Affairs_active__3GrTz\",\"low\":\"Affairs_low__2oDxA\",\"high\":\"Affairs_high__1A7X9\",\"middle\":\"Affairs_middle__yGX5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__fNLwo\",\"item\":\"Message_item__3mDuV\",\"itemAvatar\":\"Message_itemAvatar__2hMeZ\",\"itemImage\":\"Message_itemImage__XR8nt\",\"itemDialog\":\"Message_itemDialog__3HgYW\",\"itemName\":\"Message_itemName__28aUY\",\"itemPost\":\"Message_itemPost__i9rTI\",\"itemTime\":\"Message_itemTime__9PnWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__3Ca5R\",\"wrapper\":\"Greeting_wrapper__2G4Hc\",\"button\":\"Greeting_button__2IWTs\",\"firstWrapper\":\"Greeting_firstWrapper__1jOu6\",\"totalUsers\":\"Greeting_totalUsers__2sGy2\",\"input\":\"Greeting_input__2Wqx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2dk_m\",\"errorInput\":\"SuperInputText_errorInput__2bcOz\",\"error\":\"SuperInputText_error__gXt1A\",\"span\":\"SuperInputText_span__14UfQ\",\"wrapperForInput\":\"SuperInputText_wrapperForInput__2dRBm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__XumWj\",\"column\":\"HW4_column__2ggNI\",\"testSpanError\":\"HW4_testSpanError__3msTH\",\"checkboxBig\":\"HW4_checkboxBig__3HMe4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3Wz73\",\"red\":\"SuperButton_red__1A_L1\",\"button\":\"SuperButton_button__3E8v5\",\"wrapperButton\":\"SuperButton_wrapperButton__1e1vB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3GUKD\",\"spanClassName\":\"SuperCheckbox_spanClassName__1m6Lm\",\"label\":\"SuperCheckbox_label__1D4GZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3bP4o\"};","import React from 'react'\nimport { TMessageData } from './HW1'\nimport s from \"./Message.module.css\"\n\n\nfunction Message(props: TMessageData) {\n    return (\n        <div className={s.wrapper}>\n            <div className={s.item}>\n                <div className={s.itemAvatar} >\n                <img src ={props.avatar} className={s.itemImage}  alt ={\"img\"}></img>\n                </div>\n                <div className={s.itemDialog}>\n                    <div className={s.itemName}>\n                        {props.name}\n                    </div>\n                    <div className={s.itemPost}>\n                        {props.message}\n                    </div>\n                    <div className={s.itemTime}> {props.time}</div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nexport type TMessageData = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nconst messageData: TMessageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Anna',\n    message: 'How are you?',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr />\n            {/*should work (должно работать)*/}\n            {<Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />}\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport s from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n    id:number\n    affair: string // need to fix any\n    deleteAffairCallback: (_id:number) =>void\n    priority:string\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        return props.deleteAffairCallback(props.id)\n    }\nconst priorityClass = s[props.priority]\n    return (\n        <div className={s.wrapper}>\n            <span className={s.span}>{props.id }</span>\n            <span>{props.affair}</span>\n            {/* <span>{'  '}</span> */}\n            <span className={priorityClass}>{props.priority + \" \"}</span>\n            <button className={s.button} onClick={deleteCallback}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React, { Dispatch, SetStateAction } from 'react'\nimport Affair from './Affair'\nimport { AffairType, FilterType } from './HW2'\nimport s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: Dispatch<SetStateAction<FilterType>>\n    // setFilter:(filter: FilterType)=>void\n    deleteAffairCallback: (_id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType, index) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            id={a._id}\n            affair={a.name}\n            priority={a.priority}\n            deleteAffairCallback={() => props.deleteAffairCallback(a._id)}\n        />\n    ))\n\n    // const setAll = () => { props.setFilter(\"all\") } // need to fix\n    // const setHigh = () => { props.setFilter(\"high\") }\n    // const setMiddle = () => { props.setFilter(\"middle\") }\n    // const setLow = () => { props.setFilter(\"low\") }\n\n\n    const onCLickHandler = (title: FilterType) => {\n        return () => props.setFilter(title)\n    }\n\n    const setClass = (filter: FilterType) => {\n        return s.filterButton + ' ' + (props.filter === filter ? ' ' + s.active : '')\n    }\n\n    return (\n        <div className={s.firstWrapper}>\n            {mappedAffairs}\n            <div className={s.buttonWrapper}>\n                <button className={setClass('all')} onClick={onCLickHandler('all')}>All</button>\n                <button className={setClass('high')} onClick={onCLickHandler('high')}>High</button>\n                <button className={setClass('middle')} onClick={onCLickHandler('middle')}>Middle</button>\n                <button className={setClass('low')} onClick={onCLickHandler('low')}>Low</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, { useState } from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\nexport type AffairType = {\n    _id: number,\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    { _id: 1, name: 'React', priority: 'high' },\n    { _id: 2, name: 'anime', priority: 'low' },\n    { _id: 3, name: 'games', priority: 'low' },\n    { _id: 4, name: 'work', priority: 'high' },\n    { _id: 5, name: 'html & css', priority: 'middle' },\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    // if( filter === \"low\"){\n    //     return affairs.filter(item=> item.priority === 'low')\n    // }\n    // if( filter === \"high\"){\n    //     return affairs.filter(item=> item.priority === 'high')\n    // }\n    // if( filter === \"middle\"){\n    //     return affairs.filter(item=> item.priority === 'middle')\n    // }\n    // else return  affairs\n    if(filter === \"all\") return affairs\n    else return affairs.filter(a=>a.priority === filter)\n}\n\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(item=>item._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) =>{ \n        // debugger\n        return setAffairs(deleteAffair(affairs, _id))} // need to fix any\n\n\n    return (\n        <div>\n            <hr />\n            homeworks 2\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter ={filter}\n            />\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW2\n","import React, { ChangeEvent, KeyboardEvent } from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void// need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n    onKeyDownTask: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    { name, setNameCallback, addUser, error, totalUsers, onKeyDownTask } // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.input + ' ' + s.error : s.input// need to fix with (?:)\n    return (\n        <div className={s.firstWrapper}>\n            <div className={s.wrapper}>\n                <input placeholder={error}\n                    value={name} onBlur={setNameCallback}\n                    onChange={setNameCallback}\n                    onKeyDown={onKeyDownTask}\n                    className={inputClass} />\n                {/* <div>{error}</div> */}\n                <button onClick={addUser} className={s.button} >add</button>\n                <div className={s.totalUsers}>{totalUsers}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react'\nimport Greeting from './Greeting'\nimport { UserType } from './HW3'\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n    const errorMessage = 'Please add name'\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        let valueInput = e.currentTarget.value.trim();\n        if (valueInput) {\n            setName(valueInput)\n            error && setError('')\n        } else {\n            setError(errorMessage)\n        }\n    }\n   \n    const addUser = () => {\n        if (name.length) {\n            alert(`Hello ${name}!`)\n            addUserCallback(name)\n        }\n        else {\n            setError(errorMessage)\n            alert(errorMessage)\n        }\n        setName('')// need to fix\n    }\n\n    const onKeyDownTask = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            onKeyDownTask={onKeyDownTask}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, { useState } from 'react'\nimport GreetingContainer from './GreetingContainer'\n// import s from \"./Greeting.module.css\"\nimport { v1 } from 'uuid'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string// need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        // need to fix any\n        // setUsers([name, ...users]) // need to fix\n\n        const user = {\n            _id: v1(),\n            name\n        }\n        const arrName = [...users]\n        arrName.push(user)\n        setUsers(arrName)\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback} />\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW3\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, } from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    // onChange?:(e: ChangeEvent<HTMLInputElement>)=>void\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n        onChange // если есть пропс onChange\n            && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n            && e.key === 'Enter' // и если нажата кнопка Enter\n            && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = error ? s.error + \" \" + s.span : s.span\n    const finalInputClassName = error ? `${s.errorInput} ${className ? className : \" \"}`\n        : `${s.superInput} ${className ? className : \" \"}`// need to fix with (?:) and s.superInput\n\n    return (<>\n        <div className={s.wrapperForInput}>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n             { error && <span className={finalSpanClassName}>{error}</span> }\n        </div>\n           \n       </>\n    )\n}\n\nexport default SuperInputText\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n    className?: string\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className, \n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    console.log(\"button\", restProps)\n    const finalClassName = `${red ? s.red : s.default} ${s.button}`\n    return (\n        <div className={s.wrapperButton}>\n            <button\n                className={finalClassName}\n                {...restProps}  // отдаём кнопке остальные пропсы если они есть (children там внутри)\n            />\n        </div>\n    )\n}\n\nexport default SuperButton\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n    className?:string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n       if( onChange) { onChange(e)}\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalCheckBoxClassName = `${s.checkbox} ${className ? className : ''}`\nconsole.log(\"checkbox rest\", restProps)\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalCheckBoxClassName}\n\n                {...restProps} // отдаём чекбоксу остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, { ChangeEvent, useState } from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text !== \" \" && text ? '' : 'Error. You need to change it'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n            setText(' ')\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        return setChecked(e.currentTarget.checked)\n    }\n\n    return (\n        <div>\n            <hr />\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                    className={s.blue}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                    className={s.checkboxBig}\n                >\n                    My checkbox {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}    className={s.checkboxBig}>My new checkbox  </SuperCheckbox>\n            </div>\n\n            <hr />\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr />\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from '../../../p2-homeworks/h4/HW4'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}